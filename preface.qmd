# Prefacio {#sec-preface .unnumbered}

```{r, echo = FALSE}
source("common.R")
```

¡Bienvenido a la segunda edición de R Packages!
Si está familiarizado con la primera edición, este prefacio describe los cambios más importantes para que pueda centrar su lectura en las nuevas áreas.

Hay varios objetivos principales para esta edición:

-   Actualizar para reflejar los cambios en el paquete devtools, específicamente, su ["desacoplamiento consciente"](https://www.tidyverse.org/articles/2018/10/devtools-2-0-0/#conscious-uncoupling) en un conjunto de paquetes más pequeños y más enfocados.

-   Ampliar la cobertura del flujo de trabajo y el proceso, junto con la presentación de todas las partes móviles importantes que componen un paquete R.

-   Cubrir temas completamente nuevos, como sitios web de paquetes y acciones de GitHub.

Todo el contenido ha sido completamente revisado y actualizado.
Muchos capítulos son nuevos o están reorganizados y se han eliminado algunos:

-   El nuevo @sec-whole-game, "Todo el juego", muestra una vista previa de todo el proceso de desarrollo del paquete.

-   El nuevo @sec-setup, "Configuración del sistema", se eliminó de la Introducción anterior y obtuvo más detalles.

-   El capítulo anteriormente conocido como "Estructura del paquete" se ha ampliado y dividido en dos capítulos, uno que cubre la estructura y el estado del paquete (@sec-package-structure-state) y otro sobre flujos de trabajo y herramientas (@sec-workflow101).

-   El nuevo @sec-package-within, "El paquete interno", demuestra cómo extraer lógica reutilizable de scripts de análisis de datos y colocarla en un paquete.

-   Las secciones "Organización de funciones" y "Estilo de código", de @sec-r, "Código R", se han eliminado en favor de una guía de estilo en línea, <https://style.tidyverse.org/>.
    La guía de estilo está emparejada con el nuevo paquete de estilo [@styler] que puede aplicar automáticamente muchas de las reglas.

-   La cobertura de las pruebas se ha ampliado en tres capítulos: @sec-testing-basics para los conceptos básicos de las pruebas, @sec-testing-design para el diseño del conjunto de pruebas y @sec-testing-advanced para varios temas avanzados.

-   El material sobre el archivo `NAMESPACE` y las relaciones de dependencia se ha reorganizado en dos capítulos: @sec-dependencies-mindset-background proporciona un contexto técnico para pensar en las dependencias y @sec-dependencies-in-practice brinda instrucciones prácticas para usar diferentes tipos de dependencias en diferentes entornos.

-   La nueva @sec-license, "Licencias", amplía el contenido anterior sobre licencias en su propio capítulo.

-   Se ha eliminado el capítulo sobre C/C++.
    No tenía suficiente información para ser útil y, desde la primera edición del libro, han surgido otros recursos que son mejores recursos de aprendizaje.

-   Se ha eliminado el capítulo "Otros componentes".

-   El capítulo sobre Git/GitHub se ha replanteado en torno al tema más general de las prácticas de desarrollo de software (@sec-sw-dev-practices).
    Esto ya no incluye instrucciones paso a paso para tareas básicas.
    El uso de Git/GitHub se ha disparado desde la primera edición, acompañado de una explosión de recursos de aprendizaje, tanto generales como específicos de R (por ejemplo, el sitio web [Happy Git y GitHub para el usuaRio](https://happygitwithr.com/index.html)).
    Git/GitHub todavía ocupa un lugar destacado en todo el libro, especialmente en @sec-sw-dev-practices.

-   El muy breve capítulo `inst` se ha combinado en @sec-misc, con todos los demás directorios que pueden ser importantes en contextos específicos, pero que no son de misión crítica para todos los paquetes.

## Agradecimientos

```{r eval = FALSE, include = FALSE}
# El código genera material para la prosa siguiente.
library(desc)

get_contributors <- function(pkg = "devtools") {
  desc_get_authors(system.file("DESCRIPTION", package = pkg))
}
# usando paquetes representados por pegatinas hexagonales en la presentación de 2019, usethis useR!
# El equipo estuvo de acuerdo en que era el conjunto de paquetes "correcto".
get_contributors("devtools")
get_contributors("usethis")
get_contributors("roxygen2")
get_contributors("testthat")
get_contributors("desc")
get_contributors("pkgbuild")
get_contributors("pkgload")
get_contributors("rcmdcheck")
get_contributors("remotes")
get_contributors("revdepcheck")
get_contributors("sessioninfo")
```

Desde que se publicó la primera edición de Paquetes de R, los paquetes que respaldan los flujos de trabajo descritos aquí han experimentado un amplio desarrollo.
El trío original de devtools, roxygen2 y testthat se ha expandido para incluir los paquetes creados por el "desacoplamiento consciente" de devtools, como se describe en @sec-setup-usage.
La mayoría de estos paquetes se originan en Hadley Wickham (HW), debido a sus raíces devtools.
Hay muchos otros contribuyentes importantes, muchos de los cuales ahora sirven como mantenedores:

-   devtools: HW, [Winston Chang](https://github.com/wch), [Jim Hester](https://github.com/jimhester) (mantenedor, \>= v1.13.5), [Jennifer Bryan](https://github.com/jennybc) (mantenedor \>= v2.4.3)
-   usethis: HW, [Jennifer Bryan](https://github.com/jennybc) (mantenedor \>= v1.5.0), Malcolm Barrett
-   roxygen2: HW (mantenedor), [Peter Danenburg](https://github.com/klutometis), [Manuel Eugster](https://github.com/mjaeugster)
-   testthat: HW (mantenedor)
-   desc: [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor), [Kirill Müller](https://github.com/krlmlr), [Jim Hester](https://github.com/jimhester)
-   pkgbuild: HW, [Jim Hester](https://github.com/jimhester), [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor \>= v1.2.1)
-   pkgload: HW, [Jim Hester](https://github.com/jimhester), [Winston Chang](https://github.com/wch), [Lionel Henry](https://github.com/lionel-) (mantenedor \>= v1.2.4)
-   rcmdcheck: [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor)
-   remotes: HW, [Jim Hester](https://github.com/jimhester), [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor), [Winston Chang](https://github.com/wch), [Martin Morgan](https://github.com/mtmorgan), [Dan Tenenbaum](https://github.com/dtenenba)
-   revdepcheck: HW, [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor)
-   sessioninfo: HW, [Gábor Csárdi](https://github.com/gaborcsardi) (mantenedor), [Winston Chang](https://github.com/wch), [Robert Flight](https://github.com/rmflight), [Kirill Müller](https://github.com/krlmlr), [Jim Hester](https://github.com/jimhester)

Este libro fue [escrito y revisado abiertamente](https://github.com/hadley/r-pkgs/) y es verdaderamente un esfuerzo comunitario: muchas personas leen borradores, corrigen errores tipográficos, sugieren mejoras y contribuyen con contenido.
Sin esos colaboradores, el libro no sería tan bueno como es y estamos profundamente agradecidos por su ayuda.
Estamos en deuda con nuestros colegas de Posit, especialmente con el equipo de tidyverse, por estar siempre dispuestos a discutir prácticas de desarrollo de paquetes.
El libro ha mejorado enormemente gracias a las sugerencias de nuestro fantástico equipo de revisores técnicos: Malcolm Barrett, Laura DeCicco, Zhian Kamvar, Tom Mock y Maëlle Salmon.

```{r, results = "asis", echo = FALSE, eval = TRUE}
library(tidyverse)  

dat <- read_csv("data/contribs.csv", na = "NA", trim_ws = FALSE) |> 
  mutate(link = str_glue("[&#x0040;{user}](https://github.com/{user}){maybe_name}"))

contrib_string <- dat |> 
  pull(link) |> 
  str_flatten_comma()

str_glue('
  Gracias a todos los contribuyentes de la primera y segunda edición. (en \\
  orden alfabético por nombre de usuario de GitHub): 
  
  {contrib_string}.')
```

## Convenciones

A lo largo de este libro, escribimos `fun()` para referirnos a funciones, `var` para referirnos a variables y argumentos de funciones, y `path/` para rutas.

Los bloques de código más grandes entremezclan entrada y salida.
El resultado se comenta de modo que, si tiene una versión electrónica del libro, por ejemplo, <https://r-pkgs.org>, puedes copiar y pegar ejemplos fácilmente en R.
Los comentarios de salida tienen el formato `#>` para distinguirlos de los comentarios normales.

## Colofón

Este libro fue escrito usando [Quarto](https://quarto.org) dentro de [RStudio](https://www.rstudio.com/products/rstudio/).
El [sitio web](https://r-pkgs.org) está alojado con [Netlify](https://www.netlify.com), y se actualiza automáticamente después de cada confirmación mediante acciones de GitHub.
La fuente completa está disponible en [GitHub](https://github.com/hadley/r-pkgs).

Esta versión del libro fue construida con:

```{r}
library(devtools)
library(roxygen2)
library(testthat)
devtools::session_info()
```
